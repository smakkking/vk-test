// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actors": {
            "get": {
                "description": "получить список всех актеров, с фильмами где они снимались",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "GetActors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ActorWithFilms"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/actors/create": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "создание актера",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "CreateActor",
                "parameters": [
                    {
                        "description": "данные актера",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/actors/{actor_id}/delete": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "удаление актера",
                "tags": [
                    "actors"
                ],
                "summary": "DeleteActor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "идентификатор актера",
                        "name": "actor_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/actors/{actor_id}/update": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "обновление информации об актере",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "UpdateActor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "идентификатор актера",
                        "name": "actor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "данные актера",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Actor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/films": {
            "get": {
                "description": "получить список всех фильмов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "GetFilm",
                "parameters": [
                    {
                        "enum": [
                            "title",
                            "date_creation",
                            "rating"
                        ],
                        "type": "string",
                        "description": "ключ сортировки результата",
                        "name": "sort_key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FilmWithActors"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/films/create": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "создание фильма",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "CreateFilm",
                "parameters": [
                    {
                        "description": "данные фильма",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Film"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/films/search": {
            "get": {
                "description": "найти фильмы по фрагменту названия или имени актера",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "SearchFilms",
                "parameters": [
                    {
                        "enum": [
                            "title",
                            "actor_name"
                        ],
                        "type": "string",
                        "description": "по какому параметру будет идти поиск",
                        "name": "parametr",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "фрагмент поиска",
                        "name": "search-query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FilmWithActors"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/films/{film_id}/delete": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "удаление фильма",
                "tags": [
                    "films"
                ],
                "summary": "DeleteFilm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "идентификатор фильма",
                        "name": "film_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/films/{film_id}/update": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "обновление информации о фильме",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "films"
                ],
                "summary": "UpdateFilm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "идентификатор фильма",
                        "name": "film_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "данные фильма",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Film"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Actor": {
            "type": "object",
            "properties": {
                "date_birth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "model.ActorWithFilms": {
            "type": "object",
            "properties": {
                "date_birth": {
                    "type": "string"
                },
                "films": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FilmMinInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "model.Film": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "date_creation": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.FilmMinInfo": {
            "type": "object",
            "properties": {
                "date_creation": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.FilmWithActors": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Actor"
                    }
                },
                "date_creation": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "VK Test API",
	Description:      "API Server fo VK Test Task",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
